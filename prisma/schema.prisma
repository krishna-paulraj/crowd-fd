// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  walletAddress String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  transactions  Transaction[]
  contracts     Contract[]
  proposals     Proposal[]
}

model Proposal {
  id             Int           @id @default(autoincrement())
  owner          User          @relation(fields: [ownerId], references: [id])
  ownerId        Int
  title          String
  description    String
  imageUrl       String?
  category       Category?     @relation(fields: [categoryId], references: [id])
  categoryId     Int?
  fundingGoal    Int
  currentFunding Int
  transactions   Transaction[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  proposals Proposal[]
}

model Contract {
  id        Int      @id @default(autoincrement())
  address   String   @unique
  abi       Json
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id              Int       @id @default(autoincrement())
  fromAddress     String
  toAddress       String
  value           Float
  data            String
  blockNumber     Int
  transactionHash String
  user            User      @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  Proposal        Proposal? @relation(fields: [proposalId], references: [id])
  proposalId      Int?
}
